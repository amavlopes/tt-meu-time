@import "./variables";
@import "./mixins";


// Butttons

.button {
  @include reset;
  @include transitions(background-color, border-color, color);
  background-color: $secondary-text;
  border-radius: calculateRem($size-radius);
  border: calculateRem(2px) transparent solid;
  color: $primary-white;
  cursor: pointer;
  letter-spacing: calculateRem(1.5px);
  text-align: center;
  @include focus {
    outline: 0 none;
  }

  &--large {
    font-weight: $extrabold;
    line-height: calculateRem($size-larger);
    @include fontSize($size-large);
    @include padding(15px, 40px);
  }

  &--small {
    font-weight: $bold;
    line-height: calculateRem($size-small);
    @include fontSize($size-small);
    @include padding(10px, 20px);
  }

  &--caps {
    text-transform: uppercase;
  }

  &.primary-button {
    background-color: $primary-color;

    &[disabled] {
      @include HexToRgba($primary-color, .5);
    }

    @include not([disabled]) {

      @include hover {
        background-color: $primary-hover-color;
      }

      @include focus {
        background-color: $primary-focus-color;
      }

      @include active {
        background-color: $primary-active-color;
      }
    }

    @include button-outlined {
      @include not([disabled]) {
        border-color: $primary-color;
        color: $primary-color;

        @include hover {
          border-color: $primary-hover-color;
          color: $primary-hover-color;
        }

        @include focus {
          border-color: $primary-focus-color;
          color: $primary-focus-color;
        }

        @include active {
          border-color: $primary-active-color;
          color: $primary-active-color;
        }
      }
    }
  }

  &.secondary-button {
    background-color: $secondary-color;

    &[disabled] {
      @include HexToRgba($secondary-color, .5);
    }

    @include not([disabled]) {

      @include hover {
        background-color: $secondary-hover-color;
      }

      @include focus {
        background-color: $secondary-focus-color;
      }

      @include active {
        background-color: $secondary-active-color;
      }
    }

    @include button-outlined {
      @include not([disabled]) {
        border-color: $secondary-color;
        color: $secondary-color;

        @include hover {
          border-color: $secondary-hover-color;
          color: $secondary-hover-color;
        }

        @include focus {
          border-color: $secondary-focus-color;
          color: $secondary-focus-color;
        }

        @include active {
          border-color: $secondary-active-color;
          color: $secondary-active-color;
        }
      }
    }
  }

}

// Fieldsets

fieldset {
  @include reset;
  border: 0 none;
}

// Inputs

.input {
  @include reset;
  border-radius: $size-radius;
  border: solid calculateRem($size-border-large) $border-color;
  font-size: $input-normal;
  @include transitions(border-color);

  &--large {
    padding: calculateRem($input-large-padding);
  }

  &--small {
    border-width: calculateRem($size-border-small);
    padding: calculateRem($input-small-padding);
  }

  @include focus {
    outline: 0;
  }

  &::placeholder {
    color: $quaternary-text;
  }

  &--primary {
    @include focus {
      border-color: $primary-focus-color;
    }
  }

  &--secondary {
    @include focus {
      border-color: $secondary-focus-color;
    }
  }

}

.label {
  font-weight: $light;

  &--large {
    font-size: calculateRem($label-large);
  }

  &--small {
    font-size: calculateRem($label-small);
  }
}

// Validations

.validation {
  &__message {
    @include fontSize(12px);
    font-weight: $bold;
    letter-spacing: calculateRem(1px);
    margin: 0;
  }

  &--alert {
    color: $error-text;
  }
}

// @Media

@include mobile($min-mobile) {
  .button {
    &--large {
      @include fontSize($size-small);
      @include padding(10px, 20px);
    }
  }

  .input {
    &--large {
      padding: calculateRem($input-small-padding);
    }
  }

  .label {
    &--large {
      font-size: calculateRem($label-small);
    }
  }
}
