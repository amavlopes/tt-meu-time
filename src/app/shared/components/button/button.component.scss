@import "src/assets/scss/variables";
@import "src/assets/scss/mixins";

:host {
  display: flex;
}

.button {
  @include reset;
  @include transitions(background-color, border-color, color);
  background-color: $secondary-text;
  border-radius: calculateRem($size-radius);
  border: calculateRem(2px) transparent solid;
  box-sizing: border-box;
  color: $primary-white;
  cursor: pointer;
  display: flex;
  gap: calculateRem(5px);
  justify-content: center;
  letter-spacing: calculateRem(1.5px);
  text-align: center;
  @include focus {
    outline: 0 none;
  }

  &.large {
    font-weight: $extrabold;
    line-height: calculateRem($size-small);
    @include fontSize($size-small);
    @include padding(14px, 20px);
  }

  &.small {
    font-weight: $bold;
    line-height: calculateRem($size-small);
    @include fontSize($size-small);
    @include padding(10px, 20px);
  }

  &.caps {
    text-transform: uppercase;
  }

  &.full {
    flex-grow: 1;
  }

  &.primary {
    background-color: $primary-color;

    &[disabled] {
      @include HexToRgba('background-color', $primary-color, .5);
    }

    @include not([disabled]) {

      @include hover {
        background-color: $primary-hover-color;
      }

      @include focus {
        background-color: $primary-focus-color;
      }

      @include active {
        background-color: $primary-active-color;
      }
    }

    @include button-outlined {
      color: $primary-color;
      border-color: $primary-color;
      @include HexToRgba('background-color', $primary-color, 0);

      &[disabled] {
        @include HexToRgba('color', $primary-color, .8);
        @include HexToRgba('border-color', $primary-color, .5);
      }

      @include not([disabled]) {
        @include allLinksStates {
          color: $primary-white;
          @include HexToRgba('background-color', $primary-color, 1);
        }
      }
    }
  }

  &.secondary {
    background-color: $secondary-color;

    &[disabled] {
      @include HexToRgba('background-color', $secondary-color, .5);
    }

    @include not([disabled]) {

      @include hover {
        background-color: $secondary-hover-color;
      }

      @include focus {
        background-color: $secondary-focus-color;
      }

      @include active {
        background-color: $secondary-active-color;
      }
    }

    @include button-outlined {
      border-color: $secondary-color;
      color: $secondary-color;
      @include HexToRgba('background-color', $secondary-color, 0);

      &[disabled] {
        @include HexToRgba('color', $secondary-color, .8);
        @include HexToRgba('border-color', $secondary-color, .5);
      }

      @include not([disabled]) {
        @include allLinksStates {
          color: $primary-white;
          @include HexToRgba('background-color', $secondary-color, 1);
        }
      }
    }
  }

  &.tertiary {
    background-color: $primary-brand-color;

    &[disabled] {
      @include HexToRgba('background-color', $primary-brand-color, .5);
    }

    @include not([disabled]) {
      @include allLinksStates {
        @include HexToRgba('background-color', $primary-brand-color, 1);
      }
    }

    @include button-outlined {
      color: $primary-brand-color;
      border-color: $primary-brand-color;
      @include HexToRgba('background-color', $primary-brand-color, 0);

      &[disabled] {
        @include HexToRgba('color', $primary-brand-color, .8);
        @include HexToRgba('border-color', $primary-brand-color, .5);
      }

      @include not([disabled]) {
        @include allLinksStates {
          color: $primary-white;
          @include HexToRgba('background-color', $primary-brand-color, 1);
        }
      }
    }

  }

}

@include mobile-up {
  .button {
    &.large {
      line-height: calculateRem($size-larger);
      @include fontSize($size-large);
      @include padding(15px, 40px);
    }
  }
}
